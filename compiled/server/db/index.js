'use strict';

var Sequelize = require('sequelize');
var db = new Sequelize('rippl', 'root', '');

// we define the models we need using js
var User = db.define('User', {
  username: Sequelize.STRING,
  password: Sequelize.STRING
});

var Score = db.define('Score', {
  twitterHandle: Sequelize.STRING,
  numTweets: Sequelize.INTEGER,
  sentimentScore: Sequelize.FLOAT
});

// puts a UserId column on each Score instance
// also gives us the `.setUser` method available
// after creating a new instance of Score
Score.belongsTo(User);

// enables bi-directional associations between Users and Scores
User.hasMany(Score);

User.sync();
Score.sync();
// creates these tables in MySQL if they don't already exist. Pass in {force: true}
// to drop any existing user and Score tables and make new ones.

exports.User = User;
exports.Score = Score;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZlci9kYi9pbmRleC5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwiZGIiLCJVc2VyIiwiZGVmaW5lIiwidXNlcm5hbWUiLCJTVFJJTkciLCJwYXNzd29yZCIsIlNjb3JlIiwidHdpdHRlckhhbmRsZSIsIm51bVR3ZWV0cyIsIklOVEVHRVIiLCJzZW50aW1lbnRTY29yZSIsIkZMT0FUIiwiYmVsb25nc1RvIiwiaGFzTWFueSIsInN5bmMiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFlBQVlDLFFBQVEsV0FBUixDQUFoQjtBQUNBLElBQUlDLEtBQUssSUFBSUYsU0FBSixDQUFjLE9BQWQsRUFBdUIsTUFBdkIsRUFBK0IsRUFBL0IsQ0FBVDs7QUFFQTtBQUNBLElBQUlHLE9BQU9ELEdBQUdFLE1BQUgsQ0FBVSxNQUFWLEVBQWtCO0FBQzNCQyxZQUFVTCxVQUFVTSxNQURPO0FBRTNCQyxZQUFVUCxVQUFVTTtBQUZPLENBQWxCLENBQVg7O0FBS0EsSUFBSUUsUUFBUU4sR0FBR0UsTUFBSCxDQUFVLE9BQVYsRUFBbUI7QUFDN0JLLGlCQUFlVCxVQUFVTSxNQURJO0FBRTdCSSxhQUFXVixVQUFVVyxPQUZRO0FBRzdCQyxrQkFBZ0JaLFVBQVVhO0FBSEcsQ0FBbkIsQ0FBWjs7QUFNQTtBQUNBO0FBQ0E7QUFDQUwsTUFBTU0sU0FBTixDQUFnQlgsSUFBaEI7O0FBRUE7QUFDQUEsS0FBS1ksT0FBTCxDQUFhUCxLQUFiOztBQUdBTCxLQUFLYSxJQUFMO0FBQ0FSLE1BQU1RLElBQU47QUFDQTtBQUNBOztBQUVBQyxRQUFRZCxJQUFSLEdBQWVBLElBQWY7QUFDQWMsUUFBUVQsS0FBUixHQUFnQkEsS0FBaEIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG52YXIgZGIgPSBuZXcgU2VxdWVsaXplKCdyaXBwbCcsICdyb290JywgJycpO1xuXG4vLyB3ZSBkZWZpbmUgdGhlIG1vZGVscyB3ZSBuZWVkIHVzaW5nIGpzXG52YXIgVXNlciA9IGRiLmRlZmluZSgnVXNlcicsIHtcbiAgdXNlcm5hbWU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gIHBhc3N3b3JkOiBTZXF1ZWxpemUuU1RSSU5HXG59KTtcblxudmFyIFNjb3JlID0gZGIuZGVmaW5lKCdTY29yZScsIHtcbiAgdHdpdHRlckhhbmRsZTogU2VxdWVsaXplLlNUUklORyxcbiAgbnVtVHdlZXRzOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgc2VudGltZW50U2NvcmU6IFNlcXVlbGl6ZS5GTE9BVCxcbn0pO1xuXG4vLyBwdXRzIGEgVXNlcklkIGNvbHVtbiBvbiBlYWNoIFNjb3JlIGluc3RhbmNlXG4vLyBhbHNvIGdpdmVzIHVzIHRoZSBgLnNldFVzZXJgIG1ldGhvZCBhdmFpbGFibGVcbi8vIGFmdGVyIGNyZWF0aW5nIGEgbmV3IGluc3RhbmNlIG9mIFNjb3JlXG5TY29yZS5iZWxvbmdzVG8oVXNlcik7XG5cbi8vIGVuYWJsZXMgYmktZGlyZWN0aW9uYWwgYXNzb2NpYXRpb25zIGJldHdlZW4gVXNlcnMgYW5kIFNjb3Jlc1xuVXNlci5oYXNNYW55KFNjb3JlKTtcblxuXG5Vc2VyLnN5bmMoKTtcblNjb3JlLnN5bmMoKTtcbi8vIGNyZWF0ZXMgdGhlc2UgdGFibGVzIGluIE15U1FMIGlmIHRoZXkgZG9uJ3QgYWxyZWFkeSBleGlzdC4gUGFzcyBpbiB7Zm9yY2U6IHRydWV9XG4vLyB0byBkcm9wIGFueSBleGlzdGluZyB1c2VyIGFuZCBTY29yZSB0YWJsZXMgYW5kIG1ha2UgbmV3IG9uZXMuXG5cbmV4cG9ydHMuVXNlciA9IFVzZXI7XG5leHBvcnRzLlNjb3JlID0gU2NvcmU7Il19